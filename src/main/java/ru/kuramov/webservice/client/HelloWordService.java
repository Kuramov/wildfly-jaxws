
package ru.kuramov.webservice.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HelloWordService", targetNamespace = "http://ru.kuramov.wildfly.jaxws.service/", wsdlLocation = "file:/home/valerii/wildfly-9.0.2.Final/standalone/data/wsdl/wildfly-jaxws.war/HelloWordService.wsdl")
public class HelloWordService
    extends Service
{

    private final static URL HELLOWORDSERVICE_WSDL_LOCATION;
    private final static WebServiceException HELLOWORDSERVICE_EXCEPTION;
    private final static QName HELLOWORDSERVICE_QNAME = new QName("http://ru.kuramov.wildfly.jaxws.service/", "HelloWordService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/valerii/wildfly-9.0.2.Final/standalone/data/wsdl/wildfly-jaxws.war/HelloWordService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HELLOWORDSERVICE_WSDL_LOCATION = url;
        HELLOWORDSERVICE_EXCEPTION = e;
    }

    public HelloWordService() {
        super(__getWsdlLocation(), HELLOWORDSERVICE_QNAME);
    }

    public HelloWordService(WebServiceFeature... features) {
        super(__getWsdlLocation(), HELLOWORDSERVICE_QNAME, features);
    }

    public HelloWordService(URL wsdlLocation) {
        super(wsdlLocation, HELLOWORDSERVICE_QNAME);
    }

    public HelloWordService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HELLOWORDSERVICE_QNAME, features);
    }

    public HelloWordService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloWordService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HelloWS
     */
    @WebEndpoint(name = "HelloWordPort")
    public HelloWS getHelloWordPort() {
        return super.getPort(new QName("http://ru.kuramov.wildfly.jaxws.service/", "HelloWordPort"), HelloWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWS
     */
    @WebEndpoint(name = "HelloWordPort")
    public HelloWS getHelloWordPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ru.kuramov.wildfly.jaxws.service/", "HelloWordPort"), HelloWS.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HELLOWORDSERVICE_EXCEPTION!= null) {
            throw HELLOWORDSERVICE_EXCEPTION;
        }
        return HELLOWORDSERVICE_WSDL_LOCATION;
    }

}
